package com.example.demo;

import org.aspectj.lang.JoinPoint;
import org.aspectj.lang.annotation.AfterReturning;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.stereotype.Component;
import org.springframework.web.servlet.ModelAndView;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

@Aspect
@Component
public class RequestValidationAspect {

    @Autowired
    private HttpServletRequest request;

    @Autowired
    private HttpServletResponse response;

    @AfterReturning(pointcut = "execution(* com.example.demo.SpringBootHelloWorld.*(..))", returning = "result")
    public void afterReturning(JoinPoint joinPoint, Object result) throws Throwable {
        HttpSession session = request.getSession();
        String currentUrl = request.getRequestURI();
        String username = (String) session.getAttribute("username");

        // 登入后页面跳转
        if (currentUrl.equals("/log") && username != null) {
            response.sendRedirect("/logined");
        }

        // 登出后页面跳转
        if (currentUrl.equals("/logined") && username == null) {
            response.sendRedirect("/log");
        }
    }

    @Before("execution(* com.example.demo.SpringBootHelloWorld.*(..))")
    public void before(JoinPoint joinPoint) throws Throwable {
        HttpSession session = request.getSession();
        String currentUrl = request.getRequestURI();
        String username = (String) session.getAttribute("username");

        // 检查页面请求是否通过，可以根据具体业务逻辑进行处理
        if (currentUrl.equals("/x") && username == null) {
            // 页面请求不通过，可以进行相应的处理，比如跳转到错误页面
            response.sendRedirect("/error");
        }
    }
    
    @Bean
    public HttpServletRequest httpServletRequest() {
		return request;
        // 返回一个HttpServletRequest的实现对象
        // 可以根据您的应用程序需求进行相应的实现
    }
    

}
